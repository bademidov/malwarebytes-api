#!/usr/local/bin/python3

"""
    Malwarebytes Nebula API usage examples written in Python
    Please add your API credentials below
    For assistance or feedback please contact Bogdan Demidov at bdemidov@malwarebytes.com
    Date: 2021/01/06
"""

import requests
import json
from requests_oauthlib import OAuth2Session
from oauthlib.oauth2 import BackendApplicationClient

# To skip some examples, please comment out the corresponding lines below
examples = {
    'Example 1' : 'Query all endpoints (2000 max)',
    'Example 2' : 'Query endpoints pending remediation',
    'Example 3' : 'Query last 100 detections',
    'Example 4' : 'Kick off remediation scan on several machines',
    'Example 5' : 'Get scan results by scan job ID',
    'Example 6' : 'Restart Malwarebytes Endpoint Agent service on the endpoint',
    'Example 7' : 'Reboot the endpoint',
    'Example 8' : 'Get installed software on the endpoint',
    'Example 9' : 'Get Events',
    'Example 10' : 'Subscribe for all supported events (webhooks)',
    'Example 11' : 'Get all webhook subscriptions'
}

# Please add your API credentials below
# Credentials can be generated in the Nebula console > Settings > APIs & Integrations
# CLIENT_ID = "YOUR_CLIENT_ID"
# CLIENT_SECRET = "YOUR_CLIENT_SECRET"
# CLIENT_ACCOUNT = "YOUR_ACCOUNT_ID"
BASE_URL = "https://api.malwarebytes.com"
WEBHOOK_SECRET_TOKEN = "YOUR_SECRET_TOKEN"

def NEBULA_URL(path):
    return "{NEBULA_URL}{PATH}".format(NEBULA_URL="https://api.malwarebytes.com/nebula/v1", PATH=path)

def get_nebula_client(client_id, client_secret, account_id):
    client_scope = ["read", "write", "execute"]
    headers = {}

    client = BackendApplicationClient(client_id, scope=client_scope)
    nebula = OAuth2Session(client=client, scope=client_scope)
    nebula.headers.update(headers)
    token = nebula.fetch_token(
        token_url=BASE_URL + '/oauth2/token',
        client_secret=client_secret, scope=" ".join(client_scope))
    #print(token)
    if token['access_token']:
        print('Authentication is successful.')
        return "Bearer "+token['access_token']
    else:
        print('ERROR: Authentication failed. Please check your credentials and try again.')
        quit()

def save_to_file(output, name, key):
    print(' ')
    index = key.split()[1]
    filename = 'example{0}-{1}.json'.format(index,name)
    with open(filename, 'a') as f:
        print(output, file = f)
    print('============== {} -- {} ==============='.format(key.upper(),examples[key].upper()))
    print('Saving the output to {}'.format(filename))
    print(' ')


# Perform authentication
print(' ')
auth_token = get_nebula_client(CLIENT_ID, CLIENT_SECRET, CLIENT_ACCOUNT)
print(' ')

# Request headers
headers = {
    'authorization': auth_token,
    'accountid': CLIENT_ACCOUNT,
    'content-type' : 'application/json'
}


# Example -- Query endpoints
key = 'Example 1'
if key in examples:
    # 2000 is the maximum number of endpoints that can be queried per request.
    # If you have more than 2000 endpoints, please use 'next_cursor' from the response to query the next chunk of the data
    data = {
        'page_size': 2000
    }
    body = json.dumps(data)
    endpoints = requests.post(NEBULA_URL('/endpoints'), headers = headers, data = body)
    save_to_file(endpoints.json(), 'endpoints', key)


# Example -- Query endpoints with active threats (status 'Remediation required')
key = 'Example 2'
if key in examples:
    data = {
        'infection_found': True
    }
    body = json.dumps(data)
    endpoints = requests.post(NEBULA_URL('/endpoints'), headers = headers, data = body)
    save_to_file(endpoints.json(), 'endpoints', key)


# Example -- Query last 100 detections
key = 'Example 3'
if key in examples:
    data = {
        "sort_order": "desc",
        "sort_field": "reported_at",
        "page_size": 100
    }
    body = json.dumps(data)
    detections = requests.post(NEBULA_URL('/detections'), headers = headers, data = body)
    save_to_file(detections.json(), 'detections', key)


# Example -- Kick off remediation scan on several machines
key = 'Example 4'
if key in examples:
    machine_id1 = '3da7e318-fabb-44c4-9f3d-a431f21ee5dc'
    machine_id2 = 'bcb4a104-64d8-4c12-a182-5618607c055e'
    data = {
        "machine_ids": [
            machine_id1,
            machine_id2
        ],
        "command": "command.threat.scan",
        "data": {
            "scan_settings":{
                "type":"ThreatScan",
                "remove": True
            }
        }
    }
    body = json.dumps(data)
    jobs = requests.post(NEBULA_URL('/jobs'), headers = headers, data = body)
    save_to_file(jobs.json(), 'scan_jobs', key)
    print(jobs.json())


# Example -- Fetch scan results by scan job ID.
# Job ID can be found in the response when initiating a scan
key = 'Example 5'
if key in examples:
    scan_job_id = '3e05e33f-620b-4434-9873-6defe99a9866'
    # Step 1: We need to make sure that the scan job is complete by querying its status
    job = requests.get(NEBULA_URL('/jobs/') + scan_job_id, headers = headers)
    job_status = (json.loads(job.content))["state"]
    # Step 2: Query scan results if the scan is completed
    if (job_status == "COMPLETED"):
        data = { "job_id": scan_job_id }
        body = json.dumps(data)
        scan_results = requests.post(NEBULA_URL('/detections'), headers = headers, data = body)
        save_to_file(scan_results.content, 'scan_results', key)
        print("Scan job {0} status is: {1}".format(scan_job_id,job_status))
    else:
        print("Scan job {0} status is: {1}".format(scan_job_id,job_status))
        print(' ')


# Example -- Restart Malwarebytes Endpoint Agent service on the endpoint
key = 'Example 6'
if key in examples:
    machine_id = '3da7e318-fabb-44c4-9f3d-a431f21ee5dc'
    data = {
        'command': 'command.service.restart',
        'machine_ids': [ machine_id ]
    }
    body = json.dumps(data)
    jobs = requests.post(NEBULA_URL('/jobs'), headers = headers, data = body)
    save_to_file(jobs.json(), 'service_restart', key)
    print(jobs.json())


# Example -- Reboot the endpoint
key = 'Example 7'
if key in examples:
    machine_id = '3da7e318-fabb-44c4-9f3d-a431f21ee5dc'
    data = {
        "command": "command.asset.reboot",
        "machine_ids": [
                machine_id
            ],
        "data": {
            "scan_settings":{},
            "allow_postpone": False,
            "delay_in_seconds": 300,
            "message": "Reboot this machine via API. Please save your work!"
        }
    }
    body = json.dumps(data)
    jobs = requests.post(NEBULA_URL('/jobs'), headers = headers, data = body)
    print('Restart machine {}'.format(machine_id))
    save_to_file(jobs.json(), 'restart_endpoint', key)
    print(jobs.json())


# Example -- Pull software installed on the endpoint
key = 'Example 8'
if key in examples:
    machine_id = '3da7e318-fabb-44c4-9f3d-a431f21ee5dc'
    data = {
        'machine_id': machine_id
    }
    body = json.dumps(data)
    asset_data = requests.post(NEBULA_URL('/assets/software'), headers = headers, data = body)
    save_to_file(asset_data.json(), 'software', key)


# Example -- Get Events
key = 'Example 9'
if key in examples:
    events = requests.get(NEBULA_URL('/events'), headers = headers)
    save_to_file(events.json(), 'events', key)


# Example -- Subscribe for all supported events (webhooks)
key = 'Example 10'
if key in examples:
    data = {
        "url": "https://YOUR_WEBHOOK_URL",
        "enabled": True,
        "events": [
            "all"
        ],
        "secret_token": WEBHOOK_SECRET_TOKEN,
        "description": "Test webhook - subscribe for all events"
    }
    body = json.dumps(data)
    webhook = requests.post(NEBULA_URL('/webhooks/subscriptions'), headers = headers, data = body)
    save_to_file(webhook.json(), 'webhook', key)
    print(webhook.json())


# Example -- Get all webhook subscriptions
key = 'Example 11'
if key in examples:
    webhooks = requests.get(NEBULA_URL('/webhooks/subscriptions'), headers = headers)
    save_to_file(webhooks.json(), 'subscriptions', key)


print('All done.')
